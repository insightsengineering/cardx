[{"path":[]},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/cardx/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/cardx/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cardx/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/cardx/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/cardx/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Sjoberg. Author, maintainer. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/cardx/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sjoberg D (2024). cardx: Extra Analysis Results Data Utilities. R package version 0.0.0.9026, https://github.com/insightsengineering/cardx.","code":"@Manual{,   title = {cardx: Extra Analysis Results Data Utilities},   author = {Daniel Sjoberg},   year = {2024},   note = {R package version 0.0.0.9026},   url = {https://github.com/insightsengineering/cardx}, }"},{"path":"https://insightsengineering.github.io/cardx/index.html","id":"cardx-","dir":"","previous_headings":"","what":"Extra Analysis Results Data Utilities","title":"Extra Analysis Results Data Utilities","text":"source repository cardx R package.","code":""},{"path":"https://insightsengineering.github.io/cardx/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extra Analysis Results Data Utilities","text":"latest development version cardx can directly installed GitHub running following:","code":"if (!require(\"pak\")) install.packages(\"pak\") pak::pak(\"insightsengineering/cardx\")"},{"path":"https://insightsengineering.github.io/cardx/reference/ard_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD t-test ‚Äî ard_ttest","title":"ARD t-test ‚Äî ard_ttest","text":"Analysis results data paired non-paired t-tests.","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD t-test ‚Äî ard_ttest","text":"","code":"ard_ttest(data, by, variable, ...)  ard_paired_ttest(data, by, variable, id, ...)"},{"path":"https://insightsengineering.github.io/cardx/reference/ard_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD t-test ‚Äî ard_ttest","text":"data (data.frame) data frame. See details. (tidy-select) column name compare variable (tidy-select) column name compared ... arguments passed t.test(...) id (tidy-select) column name subject participant ID","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD t-test ‚Äî ard_ttest","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_ttest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ARD t-test ‚Äî ard_ttest","text":"ard_ttest() function, data expected one row per subject. data passed t.test(data[[variable]] ~ data[[]], paired = FALSE, ...). ard_paired_ttest() function, data expected one row per subject per level. t-test calculated, data reshaped wide format one row per subject. data passed t.test(x = data_wide[[<level 1>]], y = data_wide[[<level 2>]], paired = TRUE, ...).","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD t-test ‚Äî ard_ttest","text":"","code":"cards::ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_ttest(by = ARM, variable = AGE) #> {cards} data frame: 14 x 9 #>    group1 variable context   stat_name stat_label statistic #> 1     ARM      AGE   ttest    estimate  Mean Dif‚Ä¶     0.828 #> 2     ARM      AGE   ttest   estimate1  Group 1 ‚Ä¶    75.209 #> 3     ARM      AGE   ttest   estimate2  Group 2 ‚Ä¶    74.381 #> 4     ARM      AGE   ttest   statistic  t Statis‚Ä¶     0.655 #> 5     ARM      AGE   ttest     p.value    p-value     0.513 #> 6     ARM      AGE   ttest   parameter  Degrees ‚Ä¶   167.362 #> 7     ARM      AGE   ttest    conf.low  CI Lower‚Ä¶    -1.668 #> 8     ARM      AGE   ttest   conf.high  CI Upper‚Ä¶     3.324 #> 9     ARM      AGE   ttest      method     method Welch Tw‚Ä¶ #> 10    ARM      AGE   ttest alternative  alternat‚Ä¶ two.sided #> 11    ARM      AGE   ttest          mu    H0 Mean         0 #> 12    ARM      AGE   ttest      paired  Paired t‚Ä¶     FALSE #> 13    ARM      AGE   ttest   var.equal  Equal Va‚Ä¶     FALSE #> 14    ARM      AGE   ttest  conf.level  CI Confi‚Ä¶      0.95 #> ‚Ñπ 3 more variables: statistic_fmt_fn, warning, error  # constructing a paired data set, # where patients receive both treatments cards::ADSL[c(\"ARM\", \"AGE\")] |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   dplyr::mutate(.by = ARM, USUBJID = dplyr::row_number()) |>   dplyr::arrange(USUBJID, ARM) |>   ard_paired_ttest(by = ARM, variable = AGE, id = USUBJID) #> {cards} data frame: 12 x 9 #>    group1 variable context   stat_name stat_label statistic #> 1     ARM      AGE   ttest    estimate  Mean Dif‚Ä¶     0.798 #> 2     ARM      AGE   ttest   statistic  t Statis‚Ä¶     0.628 #> 3     ARM      AGE   ttest     p.value    p-value     0.531 #> 4     ARM      AGE   ttest   parameter  Degrees ‚Ä¶        83 #> 5     ARM      AGE   ttest    conf.low  CI Lower‚Ä¶    -1.727 #> 6     ARM      AGE   ttest   conf.high  CI Upper‚Ä¶     3.322 #> 7     ARM      AGE   ttest      method     method Paired t‚Ä¶ #> 8     ARM      AGE   ttest alternative  alternat‚Ä¶ two.sided #> 9     ARM      AGE   ttest          mu    H0 Mean         0 #> 10    ARM      AGE   ttest      paired  Paired t‚Ä¶      TRUE #> 11    ARM      AGE   ttest   var.equal  Equal Va‚Ä¶     FALSE #> 12    ARM      AGE   ttest  conf.level  CI Confi‚Ä¶      0.95 #> ‚Ñπ 3 more variables: statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cardx/reference/ard_wilcoxtest.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Wilcoxon Rank-Sum Test ‚Äî ard_wilcoxtest","title":"ARD Wilcoxon Rank-Sum Test ‚Äî ard_wilcoxtest","text":"Analysis results data paired non-paired Wilcoxon Rank-Sum tests.","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_wilcoxtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Wilcoxon Rank-Sum Test ‚Äî ard_wilcoxtest","text":"","code":"ard_wilcoxtest(data, by, variable, ...)  ard_paired_wilcoxtest(data, by, variable, id, ...)"},{"path":"https://insightsengineering.github.io/cardx/reference/ard_wilcoxtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Wilcoxon Rank-Sum Test ‚Äî ard_wilcoxtest","text":"data (data.frame) data frame. See details. (tidy-select) column name compare . variable (tidy-select) column name compared. ... arguments passed wilcox.test(...) id (tidy-select) column name subject participant ID.","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_wilcoxtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Wilcoxon Rank-Sum Test ‚Äî ard_wilcoxtest","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_wilcoxtest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ARD Wilcoxon Rank-Sum Test ‚Äî ard_wilcoxtest","text":"ard_wilcoxtest() function, data expected one row per subject. data passed wilcox.test(data[[variable]] ~ data[[]], paired = FALSE, ...). ard_paired_wilcoxtest() function, data expected one row per subject per level. t-test calculated, data reshaped wide format one row per subject. data passed wilcox.test(x = data_wide[[<level 1>]], y = data_wide[[<level 2>]], paired = TRUE, ...).","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/ard_wilcoxtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Wilcoxon Rank-Sum Test ‚Äî ard_wilcoxtest","text":"","code":"cards::ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_wilcoxtest(by = \"ARM\", variable = \"AGE\") #> {cards} data frame: 12 x 9 #>    group1 variable context   stat_name stat_label statistic #> 1     ARM      AGE   ttest   statistic  X-square‚Ä¶    3862.5 #> 2     ARM      AGE   ttest     p.value    p-value     0.435 #> 3     ARM      AGE   ttest      method     method Wilcoxon‚Ä¶ #> 4     ARM      AGE   ttest alternative  alternat‚Ä¶ two.sided #> 5     ARM      AGE   ttest          mu         mu         0 #> 6     ARM      AGE   ttest      paired  Paired t‚Ä¶     FALSE #> 7     ARM      AGE   ttest       exact      exact      NULL #> 8     ARM      AGE   ttest     correct    correct      TRUE #> 9     ARM      AGE   ttest    conf.int   conf.int     FALSE #> 10    ARM      AGE   ttest  conf.level  CI Confi‚Ä¶      0.95 #> 11    ARM      AGE   ttest    tol.root   tol.root         0 #> 12    ARM      AGE   ttest digits.rank  digits.r‚Ä¶       Inf #> ‚Ñπ 3 more variables: statistic_fmt_fn, warning, error  # constructing a paired data set, # where patients receive both treatments cards::ADSL[c(\"ARM\", \"AGE\")] |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   dplyr::mutate(.by = ARM, USUBJID = dplyr::row_number()) |>   dplyr::arrange(USUBJID, ARM) |>   ard_paired_wilcoxtest(by = ARM, variable = AGE, id = USUBJID) #> {cards} data frame: 12 x 9 #>    group1 variable context   stat_name stat_label statistic #> 1     ARM      AGE   ttest   statistic  X-square‚Ä¶      1754 #> 2     ARM      AGE   ttest     p.value    p-value     0.522 #> 3     ARM      AGE   ttest      method     method Wilcoxon‚Ä¶ #> 4     ARM      AGE   ttest alternative  alternat‚Ä¶ two.sided #> 5     ARM      AGE   ttest          mu         mu         0 #> 6     ARM      AGE   ttest      paired  Paired t‚Ä¶      TRUE #> 7     ARM      AGE   ttest       exact      exact      NULL #> 8     ARM      AGE   ttest     correct    correct      TRUE #> 9     ARM      AGE   ttest    conf.int   conf.int     FALSE #> 10    ARM      AGE   ttest  conf.level  CI Confi‚Ä¶      0.95 #> 11    ARM      AGE   ttest    tol.root   tol.root         0 #> 12    ARM      AGE   ttest digits.rank  digits.r‚Ä¶       Inf #> ‚Ñπ 3 more variables: statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cardx/reference/cardx-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cardx: Extra Analysis Results Data Utilities ‚Äî cardx-package","title":"cardx: Extra Analysis Results Data Utilities ‚Äî cardx-package","text":"R Package Supplement ARD Functions Found cards.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cardx/reference/cardx-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cardx: Extra Analysis Results Data Utilities ‚Äî cardx-package","text":"Maintainer: Daniel Sjoberg sjobergd@gene.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_ttest_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert t-test to ARD ‚Äî .format_ttest_results","title":"Convert t-test to ARD ‚Äî .format_ttest_results","text":"Convert t-test ARD","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_ttest_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert t-test to ARD ‚Äî .format_ttest_results","text":"","code":".format_ttest_results(by, variable, lst_tidy, paired, ...)"},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_ttest_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert t-test to ARD ‚Äî .format_ttest_results","text":"(string) column name variable (string) variable column name lst_tidy (named list) list tidied results constructed eval_capture_conditions(), e.g. eval_capture_conditions(t.test(mtcars$mpg ~ mtcars$) |> broom::tidy()) paired logical indicating whether want paired     t-test. ... passed t.test(...)","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_ttest_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert t-test to ARD ‚Äî .format_ttest_results","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_ttest_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert t-test to ARD ‚Äî .format_ttest_results","text":"","code":"cardx:::.format_ttest_results(   by = \"ARM\",   variable = \"AGE\",   paired = FALSE,   lst_tidy =     cards::eval_capture_conditions(       stats::t.test(ADSL[[\"AGE\"]] ~ ADSL[[\"ARM\"]], paired = FALSE) |>         broom::tidy()     ) ) #> {cards} data frame: 14 x 9 #>    group1 variable   stat_name stat_label statistic     error #> 1     ARM      AGE    estimate  Mean Dif‚Ä¶      NULL object '‚Ä¶ #> 2     ARM      AGE   estimate1  Group 1 ‚Ä¶      NULL object '‚Ä¶ #> 3     ARM      AGE   estimate2  Group 2 ‚Ä¶      NULL object '‚Ä¶ #> 4     ARM      AGE   statistic  t Statis‚Ä¶      NULL object '‚Ä¶ #> 5     ARM      AGE     p.value    p-value      NULL object '‚Ä¶ #> 6     ARM      AGE   parameter  Degrees ‚Ä¶      NULL object '‚Ä¶ #> 7     ARM      AGE    conf.low  CI Lower‚Ä¶      NULL object '‚Ä¶ #> 8     ARM      AGE   conf.high  CI Upper‚Ä¶      NULL object '‚Ä¶ #> 9     ARM      AGE      method     method      NULL object '‚Ä¶ #> 10    ARM      AGE alternative  alternat‚Ä¶      NULL object '‚Ä¶ #> 11    ARM      AGE          mu    H0 Mean         0 object '‚Ä¶ #> 12    ARM      AGE      paired  Paired t‚Ä¶     FALSE object '‚Ä¶ #> 13    ARM      AGE   var.equal  Equal Va‚Ä¶     FALSE object '‚Ä¶ #> 14    ARM      AGE  conf.level  CI Confi‚Ä¶      0.95 object '‚Ä¶ #> ‚Ñπ 3 more variables: context, statistic_fmt_fn, warning"},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_wilcoxtest_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert t-test to ARD ‚Äî .format_wilcoxtest_results","title":"Convert t-test to ARD ‚Äî .format_wilcoxtest_results","text":"Convert t-test ARD","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_wilcoxtest_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert t-test to ARD ‚Äî .format_wilcoxtest_results","text":"","code":".format_wilcoxtest_results(by, variable, lst_tidy, paired, ...)"},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_wilcoxtest_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert t-test to ARD ‚Äî .format_wilcoxtest_results","text":"(string) column name variable (string) variable column name lst_tidy (named list) list tidied results constructed eval_capture_conditions(), e.g. eval_capture_conditions(t.test(mtcars$mpg ~ mtcars$) |> broom::tidy()) paired logical indicating whether want paired test. ... passed wilcox.test(...)","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_wilcoxtest_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert t-test to ARD ‚Äî .format_wilcoxtest_results","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-format_wilcoxtest_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert t-test to ARD ‚Äî .format_wilcoxtest_results","text":"","code":"cardx:::.format_wilcoxtest_results(   by = \"ARM\",   variable = \"AGE\",   paired = FALSE,   lst_tidy =     cards::eval_capture_conditions(       stats::wilcox.test(ADSL[[\"AGE\"]] ~ ADSL[[\"ARM\"]], paired = FALSE) |>         broom::tidy()     ) ) #> {cards} data frame: 12 x 9 #>    group1 variable   stat_name stat_label statistic     error #> 1     ARM      AGE   statistic  X-square‚Ä¶      NULL object '‚Ä¶ #> 2     ARM      AGE     p.value    p-value      NULL object '‚Ä¶ #> 3     ARM      AGE      method     method      NULL object '‚Ä¶ #> 4     ARM      AGE alternative  alternat‚Ä¶      NULL object '‚Ä¶ #> 5     ARM      AGE          mu         mu         0 object '‚Ä¶ #> 6     ARM      AGE      paired  Paired t‚Ä¶     FALSE object '‚Ä¶ #> 7     ARM      AGE       exact      exact      NULL object '‚Ä¶ #> 8     ARM      AGE     correct    correct      TRUE object '‚Ä¶ #> 9     ARM      AGE    conf.int   conf.int     FALSE object '‚Ä¶ #> 10    ARM      AGE  conf.level  CI Confi‚Ä¶      0.95 object '‚Ä¶ #> 11    ARM      AGE    tol.root   tol.root         0 object '‚Ä¶ #> 12    ARM      AGE digits.rank  digits.r‚Ä¶       Inf object '‚Ä¶ #> ‚Ñπ 3 more variables: context, statistic_fmt_fn, warning"},{"path":"https://insightsengineering.github.io/cardx/reference/dot-paired_data_pivot_wider.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert long paired data to wide ‚Äî .paired_data_pivot_wider","title":"Convert long paired data to wide ‚Äî .paired_data_pivot_wider","text":"Convert long paired data wide Convert long paired data wide","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-paired_data_pivot_wider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert long paired data to wide ‚Äî .paired_data_pivot_wider","text":"","code":".paired_data_pivot_wider(data, by, variable, id, env = rlang::caller_env())  .paired_data_pivot_wider(data, by, variable, id, env = rlang::caller_env())"},{"path":"https://insightsengineering.github.io/cardx/reference/dot-paired_data_pivot_wider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert long paired data to wide ‚Äî .paired_data_pivot_wider","text":"data (data.frame) data frame one line per subject per group (string) column name variable (string) variable column name id (string) subject id column name env (environment) used error messaging. Default rlang::caller_env()","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-paired_data_pivot_wider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert long paired data to wide ‚Äî .paired_data_pivot_wider","text":"wide data frame wide data frame","code":""},{"path":"https://insightsengineering.github.io/cardx/reference/dot-paired_data_pivot_wider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert long paired data to wide ‚Äî .paired_data_pivot_wider","text":"","code":"cards::ADSL[c(\"ARM\", \"AGE\")] |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   dplyr::mutate(.by = ARM, USUBJID = dplyr::row_number()) |>   dplyr::arrange(USUBJID, ARM) |>   cardx:::.paired_data_pivot_wider(by = \"ARM\", variable = \"AGE\", id = \"USUBJID\") #> # A tibble: 86 √ó 3 #>    USUBJID   by1   by2 #>      <int> <dbl> <dbl> #>  1       1    63    71 #>  2       2    64    77 #>  3       3    85    81 #>  4       4    52    75 #>  5       5    84    57 #>  6       6    79    56 #>  7       7    81    79 #>  8       8    69    56 #>  9       9    63    61 #> 10      10    81    56 #> # ‚Ñπ 76 more rows cards::ADSL[c(\"ARM\", \"AGE\")] |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   dplyr::mutate(.by = ARM, USUBJID = dplyr::row_number()) |>   dplyr::arrange(USUBJID, ARM) |>   cardx:::.paired_data_pivot_wider(by = \"ARM\", variable = \"AGE\", id = \"USUBJID\") #> # A tibble: 86 √ó 3 #>    USUBJID   by1   by2 #>      <int> <dbl> <dbl> #>  1       1    63    71 #>  2       2    64    77 #>  3       3    85    81 #>  4       4    52    75 #>  5       5    84    57 #>  6       6    79    56 #>  7       7    81    79 #>  8       8    69    56 #>  9       9    63    61 #> 10      10    81    56 #> # ‚Ñπ 76 more rows"},{"path":"https://insightsengineering.github.io/cardx/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages ‚Äî reexports","title":"Objects exported from other packages ‚Äî reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, starts_with, ","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cardx/news/index.html","id":"new-features-0-0-0-9026","dir":"Changelog","previous_headings":"","what":"New Features","title":"cardx 0.0.0.9026","text":"New package!","code":""}]
